kind: ConfigMap
apiVersion: v1
metadata:
  name: ingress-nginx-controller 
  namespace: ingress-nginx 
  labels:
    #app.kubernetes.io/name: ingress-nginx
    ##app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/component: controller
data:
  keepalive_timeout: "150"
  proxy-read-timeout: "150"
  proxy-send-timeout: "150"
  worker-connections: "65535"
  proxy-connect-timeout: "150"
  #log-format: "time": "$time_iso8601", "remote_addr": "$remote_addr","body_bytes_sent": "$body_bytes_sent", "request_time": "$request_time", "status": "$status", "request": "$request", "request_method": "$request_method", "http_referrer": "$http_referer", "http_x_forwarded_for": "$http_x_forwarded_for", "http_user_agent": "$http_user_agent"
  #log-format: '$time_iso8601 $remote_addr $body_bytes_sent $request_time $upstream_response_time $status $request $request_method $http_referer $http_x_forwarded_for $http_user_agent'
  log-format-upstream: '{"time": "$time_iso8601", "remote_addr": "$proxy_protocol_addr", "x_forward_for": "$proxy_add_x_forwarded_for", "request_id": "$req_id", "remote_user": "$remote_user", "bytes_sent": $bytes_sent, "request_time": $request_time, "status": $status, "vhost": "$host", "request_proto": "$server_protocol", "path": "$uri", "request_query": "$args", "request_length": $request_length, "duration": $request_time,"method": "$request_method", "http_referrer": "$http_referer", "http_user_agent": "$http_user_agent" }'
