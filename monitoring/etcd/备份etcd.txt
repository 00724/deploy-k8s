#etcd备份
ETCDCTL_API=3 \
etcdctl \
snapshot save snap.db \
--endpoints=https://x.x.x.x:2379 \
--cacert=/etc/kubernetes/pki/etcd/ca.crt \
--cert=/etc/kubernetes/pki/etcd/peer.crt \
--key=/etc/kubernetes/pki/etcd/peer.key



#恢复etcd
#1、停止kubelet
systemctl stop kubelet.service 

#2、停止api-server和etcd相关容器
docker stop `docker ps | grep api | awk '{print $1}'`
docker stop `docker ps | grep etcd | awk '{print $1}'`

#3、删除etcd存储目录
rm -rf /var/lib/etcd/

#4、恢复数据
ETCDCTL_API=3 \
etcdctl \
snapshot restore /root/snap.db \
--data-dir=/var/lib/etcd \
--endpoints=https://x.x.x.x:2379 \
--cacert=/etc/kubernetes/pki/etcd/ca.crt \
--cert=/etc/kubernetes/pki/etcd/peer.crt \
--key=/etc/kubernetes/pki/etcd/peer.key

#5、启动kubelet
systemctl start kubelet.service

#6、查验pod情况
kubectl get pods -A -o wide







查询基本信息
#查询etcd中所有key
ETCDCTL_API=3 \
etcdctl \
get / --prefix --keys-only \
--endpoints=https://10.4.7.71:2379 \
--cacert=/etc/kubernetes/pki/etcd/ca.crt \
--cert=/etc/kubernetes/pki/etcd/peer.crt \
--key=/etc/kubernetes/pki/etcd/peer.key

#查询etcd中flannel
ETCDCTL_API=3 \
etcdctl \
--endpoints=https://10.4.7.71:2379 \
--cacert=/etc/kubernetes/pki/etcd/ca.crt \
--cert=/etc/kubernetes/pki/etcd/peer.crt \
--key=/etc/kubernetes/pki/etcd/peer.key \
get /registry/configmaps/kube-system/kube-flannel-cfg


ps：在node节点上执行即可，安装一个etcd-clinet就可以执行etcdctl命令了




# 删除ingress 中的名为ingress-ingress-nginx-controller-4gdww 的pod
ETCDCTL_API=3 etcdctl del /registry/pods/ingress/ingress-ingress-nginx-controller-4gdww --endpoints=https://10.4.7.51:2379 --cacert=/etc/kubernetes/pki/etcd/ca.crt --cert=/etc/kubernetes/pki/etcd/peer.crt --key=/etc/kubernetes/pki/etcd/peer.key

# 删除需要删除的NAMESPACE
ETCDCTL_API=3 etcdctl del /registry/namespaces/ingress --endpoints=https://10.4.7.51:2379 --cacert=/etc/kubernetes/pki/etcd/ca.crt --cert=/etc/kubernetes/pki/etcd/peer.crt --key=/etc/kubernetes/pki/etcd/peer.key