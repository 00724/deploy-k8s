# webapp服务
---
apiVersion: v1
kind: Service
metadata:
  name: webapp
  namespace: test
  labels:
    app: webapp
spec:
  selector:
    app: webapp
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
    name: http

#ingress
---
kind: Ingress
apiVersion: extensions/v1beta1
#apiVersion: networking.k8s.io/v1
metadata: 
  name: webapp
  namespace: test
spec:
  rules:
  - host: test.code404.net
    http:
      paths:
      - path: /
        backend: 
          serviceName: webapp
          servicePort: 80

#filebeat的cm
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: filebeat-config
  namespace: test
  labels:
    k8s-app: filebeat
data:
  filebeat.yml: |-
    filebeat.inputs:
    - type: log
      json.keys_under_root: true
      json.overwrite_keys: true
      json.message_key: message
      paths:
        - /logm/*.log
        - /logm/*.log
        - /logm/*/*.log
        - /logm/*/*/*.log
        - /logm/*/*/*/*.log
        - /logm/*/*/*/*/*.log
      multiline.pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}"
      multiline.negate: true
      multiline.match: after
      tail_files: true
      fields:
        POD_NAME: '${POD_NAME}'
        POD_IP: '${POD_IP}'
        PROJ_ENV: '${PROJ_ENV}'
    setup.ilm.enabled: false
    setup.template.pattern: true
    setup.template.name: "${PROJ_NAME}-${PROJ_ENV}"
    setup.template.pattern: "${PROJ_NAME}-${PROJ_ENV}-*"
    output.elasticsearch:
      hosts: ["${ES_HOST-1}:9200"]
      index: "${PROJ_NAME}-${PROJ_ENV}-%{+yyyy.MM.dd}"
      ilm.enabled: false

#nginx.conf的cm
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
  namespace: test
  labels:
    app: webapp
data:
  nginx.conf: |-
    user  nginx;
    worker_processes  auto;
    error_log  /var/log/nginx/error.log warn;
    pid        /var/run/nginx.pid;
    events {
        worker_connections  1024;
    }
    http {
        #include       /etc/nginx/mime.types;
        default_type  application/octet-stream;
        log_format  json  '{"time": "$time_iso8601", "remote_addr": "$remote_addr",'
                          '"x-forward-for":"$proxy_add_x_forwarded_for", "remote_user": "$remote_user",'
                          '"bytes_sent": "$bytes_sent", "request_time": "$request_time",'
                          '"status": "$status", "vhost": "$host", "request_proto": "$server_protocol",'
                          '"path": "$uri","request_query": "$args", "request_length": "$request_length",'
                          '"duration": "$request_time", "method": "$request_method", "http_referrer": "$http_referer",'
                          '"http_user_agent": "$http_user_agent","upstream_addr": "$upstream_addr",'
                          '"upstream_response_length": "$upstream_response_length",'
                          '"upstream_response_time": "$upstream_response_time",'
                          '"upstream_status": "$upstream_status"}';
        access_log  /var/log/nginx/access.log  json;
        sendfile        on;
        #tcp_nopush     on;
        keepalive_timeout  65;
        gzip  on;
        include /etc/nginx/conf.d/*.conf;
    }

# deployment
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp
  namespace: test
spec:
  replicas: 1
  minReadySeconds: 10     #滚动升级15s后标志pod准备就绪
  strategy:
    rollingUpdate:        #replicas为2, 升级过程中pod个数在1-3个之间
      maxSurge: 1         #滚动升级时会先启动1个pod
      maxUnavailable: 1   #滚动升级时允许pod处于Unavailable的最大个数
  selector:
    matchLabels:
      app: webapp
  template:
    metadata:
      labels:
        app: webapp
    spec:
      terminationGracePeriodSeconds: 30 #30秒内优雅关闭程序
      containers:
      - image: registry.cn-beijing.aliyuncs.com/openacl/filebeat:7.2.0-es-y
        name: filebeat
        args: [
          "-c", "/etc/filebeat/filebeat.yml",
          "-e",
        ]
        env:
        - name: ES_HOST-1
          value: 10.4.7.100
        - name: PROJ_NAME
          value: webapp
        - name: PROJ_ENV
          value: dev
        - name: POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        #- name: NS
        #  valueFrom:
        #    filedRef:
        #      apiVersion: v1
        #      filePath: metadata.namespace
        securityContext:
          runAsUser: 0
        resources:
          limits:
            memory: 50Mi
          requests:
            cpu: 200m
            memory: 50Mi
        volumeMounts:
        - name: filebeat-config               #将configmap的内容放到容器本地目录
          mountPath: /etc/filebeat/
          readOnly: true
        - name: logm       #同一个pod内的两个应用共享目录logm, 一个写一个读
          mountPath: /logm
      - name: webapp
        image: nginx:1.16  #提供具体服务的app镜像
        ports:
        - containerPort: 80
        volumeMounts:
        - name: logm       #指定挂在目录到logm
          mountPath: /var/log/nginx/
        - name: nginx-conf
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
          readOnly: true
      volumes:
      - name: logm         #定义logm为EmptyDir类型挂载目录
        emptyDir: {}
      - name: filebeat-config
        configMap:
          defaultMode: 420
          name: filebeat-config  #使用前面定义的configmap
          items:
          - key: filebeat.yml
            path: filebeat.yml
      - name: nginx-conf
        configMap:
          defaultMode: 420
          name: nginx-conf
          items:
          - key: nginx.conf
            path: nginx.conf